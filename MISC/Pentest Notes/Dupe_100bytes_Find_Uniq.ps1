# after running gowitness remove the dupes!
# gowitness scan file -f in2.txt  --write-db  -T 10 -t 21 --screenshot-fullpage   -s ./my-screenshots/  --chrome-path /usr/bin/chromium   --chrome-window-x 1280   --chrome-window-y 720  --delay 5   --log-scan-errors   --javascript "() => { window.alert = () => {}; window.confirm = () => true; }"


$sourcePath = "C:\BACKUP\CLIENTS\my-screenshots"
$dupesPath = Join-Path $sourcePath "DUPES"

# Create DUPES folder if it doesn't exist
if (-not (Test-Path $dupesPath)) {
    New-Item -ItemType Directory -Path $dupesPath | Out-Null
}

# Get all files and group by size range (100 byte tolerance)
Get-ChildItem -Path $sourcePath -File | 
    Group-Object { [Math]::Floor($_.Length / 100) } |
    Where-Object { $_.Count -gt 1 } |
    ForEach-Object {
        # For each size group, find files within 100 bytes of each other
        $files = $_.Group | Sort-Object Length

        for ($i = 0; $i -lt $files.Count; $i++) {
            $compareFile = $files[$i]
            $dupeGroup = @($compareFile)

            for ($j = $i + 1; $j -lt $files.Count; $j++) {
                if ([Math]::Abs($files[$j].Length - $compareFile.Length) -le 100) {
                    $dupeGroup += $files[$j]
                }
            }

            # Move all but the first file to DUPES
            if ($dupeGroup.Count -gt 1) {
                $dupeGroup | Select-Object -Skip 1 | ForEach-Object {
                    Move-Item -Path $_.FullName -Destination $dupesPath -Force
                    Write-Host "Moved: $($_.Name) (Size: $($_.Length) bytes)"
                }
            }
        }
    }

Write-Host "`nDone! Duplicates moved to: $dupesPath"
